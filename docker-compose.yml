version: '3.9'
services:
  # Logica di API Gateway
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./jwt_secret.key:/etc/nginx/keys/jwt_secret.key
    depends_on:
      - game-catalog
      - order-service
      - notification-service
    restart: always

  zookeeper: #TODO: Da rivedere
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka: #TODO: Da rivedere
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # Services
  game-catalog: #TODO: Da rivedere
    build:
      context: ./services/game-catalog
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      MONGO_URI: mongodb://mongo:27017/game-catalog
    restart: always
    depends_on:
      - mongo
      - kafka
    volumes:
      - ./services/game-catalog/src:/usr/src/app

  order-service: #TODO: Da rivedere
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      POSTGRES_URI: postgres://postgres:password@postgres:5432/orders
    restart: always
    depends_on:
      - postgres
      - kafka
    volumes:
      - ./services/order-service/src:/usr/src/app

  notification-service: #TODO: Da rivedere
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    environment:
      REDIS_URI: redis://redis:6379
    restart: always
    depends_on:
      - redis
      - kafka
    volumes:
      - ./services/order-service/src:/usr/src/app

  # Databases
  mongo: #TODO: Da rivedere
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./databases/mongo:/data/db
      - ./databases/mongo/configdb:/data/configdb

  postgres: #TODO: Da rivedere
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orders
    volumes:
      - ./databases/postgres:/var/lib/postgresql/data

  redis: #TODO: Da rivedere
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  # Monitoring
  prometheus: #TODO: Da rivedere
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana: #TODO: Da rivedere
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
